---
type Props = {
  crumbs: { name: string; url: string }[];
  showHome?: boolean;
};

const { crumbs: crumbsProp, showHome } = Astro.props;
let crumbs = crumbsProp;

if (showHome) {
  crumbs = [{ name: 'Home', url: '/' }, ...crumbs];
}
---

<style>
  .breadcrumbs-list {
    display: flex;
    flex-flow: row nowrap;
    width: 100%;
    margin: 0 0 var(--default-spacing);
    font-family: var(--roboto-mono);
    padding: 0;
  }

  .breadcrumbs-list-item {
    list-style: none;
  }

  .breadcrumbs-list-item-link {
    font-size: 13px;
    text-decoration: none;
    white-space: nowrap;
    text-overflow: ellipsis;
    color: var(--text-color);
  }

  .breadcrumbs-list-item:not(:last-child) {
    &::after {
      color: var(--text-color);
      content: 'â†’';
      font-size: 14px;
      margin-right: var(--smaller-spacing);
    }
  }

  @media (min-width: 420px) {
    .breadcrumbs-list-item-link {
      font-size: 14px;
    }

    .breadcrumbs-list-item {
      max-width: 260px;
    }
  }
</style>
<nav class="breadcrumbs">
  <ol class="breadcrumbs-list">
    {
      crumbs.map((crumb, index) => {
        const active = index === crumbs.length - 1;
        return (
          <li class:list={['breadcrumbs-list-item']}>
            <a
              class:list={['breadcrumbs-list-item-link', { active }]}
              href={crumb.url}>
              {crumb.name}
            </a>
          </li>
        );
      })
    }
  </ol>
</nav>
