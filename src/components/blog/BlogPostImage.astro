---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';

type Props = {
  image: ImageMetadata;
  alt: string;
  width?: number;
  height?: number;
  caption?: string;
};

const {
  image,
  alt,
  caption,
  width: widthProp = 848,
  height: heightProp,
} = Astro.props;

const height = heightProp;
const width = widthProp ? widthProp : image.width;

let paddingBottom: string;
if (heightProp && widthProp) {
  paddingBottom = `${(heightProp / widthProp) * 100}%`;
} else {
  paddingBottom = `${(image.height / image.width) * 100}%`;
}
---

<style define:vars={{ 'padding-bottom': paddingBottom }}>
  .blog-post-image {
    margin: 0;
    padding: 0;
  }

  .blog-post-image-wrapper {
    position: relative;
    padding-bottom: var(--padding-bottom);
    width: 100%;
  }

  .blog-post-image-caption {
    color: var(--secondary-text-color);
    font-size: 0.9em;
    font-style: italic;
    margin: var(--smaller-spacing) 0 0;
  }

  .blog-post-image-element {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    filter: var(--img-filter);
    object-fit: cover;
  }
</style>

<figure class="blog-post-image" style="">
  <div class="blog-post-image-wrapper">
    <Image
      src={image}
      alt={alt}
      class="blog-post-image-element"
      width={width}
      height={height}
    />
  </div>
  {
    caption && (
      <figcaption class="blog-post-image-caption">{caption}</figcaption>
    )
  }
</figure>
