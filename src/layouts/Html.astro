---
import '../styles/global.scss';
import '@fontsource/roboto';
import '@fontsource-variable/roboto-mono';
import '@fontsource-variable/roboto-condensed';

export interface Props {
  title: string;
  meta?: {
    description?: string;
    keywords?: string[];
    imageUrl?: string;
  };
  preload?: string[];
}

const {
  title,
  preload,
  meta: { description, keywords, imageUrl } = {},
} = Astro.props;
const ogUrl = `https://juan.fi${Astro.url.pathname}`;

const lightThemeColor = '#fff';
const darkThemeColor = '#141417';
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="viewport" content="width=device-width" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta
      name="apple-mobile-web-app-status-bar-style"
      content="black-translucent"
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: light)"
      content={lightThemeColor}
    />
    <meta
      name="theme-color"
      media="(prefers-color-scheme: dark)"
      content={darkThemeColor}
    />
    <meta name="og:title" content={title} />
    <meta name="og:type" content="website" />
    <meta name="og:url" content={ogUrl} />
    <meta name="twitter:card" content="summary" />
    {
      description && (
        <>
          <meta name="description" content={description} />
          <meta name="og:description" content={description} />
          <meta name="twitter:description" content={description} />
        </>
      )
    }
    {keywords && <meta name="keywords" content={keywords.join(', ')} />}
    {
      imageUrl && (
        <>
          <meta name="og:image" content={imageUrl} />
          <meta name="twitter:image" content={imageUrl} />
        </>
      )
    }
    {preload?.map((href) => <link rel="preload" href={href} as="image" />)}
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <slot />
  </body>
</html>
